// THREE.js React Three Fiber snippets
{
	// Basic snippets
	"Mesh": {
		"prefix": "mesh",
		"body": [
			"<mesh></mesh>"
		],
		"description": "Ajoute une balise <mesh>."
	},
	"Canvas": {
		"prefix": "canvas",
		"body": [
			"<Canvas></Canvas>"
		],
		"description": "Ajoute une balise <Canvas>."
	},

	// Geometry snippets
	"Box Geometry": {
		"prefix": "boxGeometry",
		"body": [
			"<boxGeometry />"
		],
		"description": "Ajoute une boîte."
	},
	"Sphere Geometry": {
		"prefix": "sphereGeometry",
		"body": [
			"<sphereGeometry />"
		],
		"description": "Ajoute une sphère."
	},
	"Plane Geometry": {
		"prefix": "planeGeometry",
		"body": [
			"<planeGeometry />"
		],
		"description": "Ajoute un plan."
	},
	"Cylinder Geometry": {
		"prefix": "cylinderGeometry",
		"body": [
			"<mesh><cylinderGeometry />"
		],
		"description": "Ajoute un cylindre"
	},
	"Torus Knot Geometry": {
		"prefix": "torusKnotGeometry",
		"body": [
			"<torusKnotGeometry />"
		],
		"description": "Ajoute un torus knot."
	},
	"Buffer Geometry": {
		"prefix": "bufferGeometry",
		"body": [
			"<bufferGeometry></bufferGeometry>"
		],
		"description": "Ajoute une géométrie tampon."
	},

	// Light snippets
	"Light": {
		"prefix": "light",
		"body": [
			"<pointLight position={[10, 10, 10]} intensity={1} />"
		],
		"description": "Ajoute une lumière ponctuelle."
	},
	"Directional Light": {
		"prefix": "directionalLight",
		"body": [
			"<directionalLight position={[10, 10, 10]} intensity={1} />"
		],
		"description": "Ajoute une lumière directionnelle."
	},
	"Ambient Light": {
		"prefix": "ambientLight",
		"body": [
			"<ambientLight intensity={0.5} />"
		],
		"description": "Ajoute une lumière ambiante."
	},
	"Spot Light": {
		"prefix": "spotLight",
		"body": [
			"<spotLight position={[0, 10, 0]} angle={Math.PI / 4} intensity={1} />"
		],
		"description": "Ajoute une lumière spot."
	},

	// Camera snippets
	"Camera": {
		"prefix": "camera",
		"body": [
			"camera = {{ fov:45, near:0.1, far:100, position:[0, 0, 5] }}"
		],
		"description": "Ajoute une caméra."
	},
	"Orthographic Camera": {
		"prefix": "orthographic camera",
		"body": [
			"orthographic camera = {{ fov:45, zoom:100, near:0.1, far:100, position:[0, 0, 5] }}"
		],
		"description": "Ajoute une caméra orthographique."
	},

	// Controls snippets
	"Orbit Controls": {
		"prefix": "orbitControls",
		"body": [
			"<OrbitControls />"
		],
		"description": "Ajoute des contrôles orbitaux."
	},
	"Transform Controls": {
		"prefix": "transformControls",
		"body": [
			"<TransformControls object={ } mode='translate'/>"
		],
		"description": "Ajoute des contrôles de transformation."
	},
	"Pivot Controls": {
		"prefix": "pivotControls",
		"body": [
			"<PivotControls anchor={[0, 0, 0]} depthTest={false} lineWidth={4} axisColors={['#9381ff', '#ff4d6d', '#7ae582']} scale={1.2} fixed={false}></PivotControls>"
		],
		"description": "Ajoute des contrôles de pivot."
	},

	// Object snippets
	"Text": {
		"prefix": "text",
		"body": [
			"<Text font='./your-font.woff' fontSize={1} color='salmon' position-y={2} textAlign='center'> Hello World ! </Text>"
		],
		"description": "Ajoute un texte."
	},
	"Group": {
		"prefix": "group",
		"body": [
			"<group></group>"
		],
		"description": "Ajoute un groupe."
	},
	"GLTF": {
		"prefix": "gltf",
		"body": [
			"<primitive object={gltf.scene} />"
		],
		"description": "Ajoute un modèle GLTF."
	},
	"Html": {
		"prefix": "Html",
		"body": [
			"<Html position={[1, 1, 0]} wrapperClass='label' center distanceFactor={6} occlude={[ objectRef ]}> Hello World ! </Html>"
		],
		"description": "Ajoute un élément Html."
	},

	"Float": {
		"prefix": "float",
		"body": [
			"<Float></Float>"
		],
		"description": "Ajoute un calque flottant."
	},

	// Material snippets
	"MeshStandardMaterial": {
		"prefix": "meshStandardMaterial",
		"body": [
			"<meshStandardMaterial />"
		],
		"description": "Ajoute un matériau MeshStandard."
	},
	"MeshBasicMaterial": {
		"prefix": "meshBasicMaterial",
		"body": [
			"<meshBasicMaterial />"
		],
		"description": "Ajoute un matériau MeshBasic."
	},
	"MeshNormalMaterial": {
		"prefix": "meshNormalMaterial",
		"body": [
			"<meshNormalMaterial />"
		],
		"description": "Ajoute un matériau MeshNormal."
	},
	"Material": {
		"prefix": "material",
		"body": [
			"<material></material>"
		],
		"description": "Ajoute un élément Material."
	},
	"Mesh Reflector Material": {
		"prefix": "MeshReflectorMaterial",
		"body": [
			"<MeshReflectorMaterial resolution={512} blur={[1000, 1000]} mixBlur={1} mirror={0.75} color='greenYellow' />"
		],
		"description": "Ajoute un matériau MeshReflector."
	},
	
	// Parameters snippets
	"Position": {
		"prefix": "position",
		"body": [
			"position={[0, 0, 0]}"
		],
		"description": "Ajoute un paramètre de position."
	},
	"Position-x": {
		"prefix": "position-x",
		"body": [
			"position-x={0}"
		],
		"description": "Ajoute un paramètre de position x."
	},
	"Position-y": {
		"prefix": "position-y",
		"body": [
			"position-y={0}"
		],
		"description": "Ajoute un paramètre de position y."
	},
	"Position-z": {
		"prefix": "position-z",
		"body": [
			"position-z={0}"
		],
		"description": "Ajoute un paramètre de position z."
	},
	"Rotation": {
		"prefix": "rotation",
		"body": [
			"rotation={[0, 0, 0]}"
		],
		"description": "Ajoute un paramètre de rotation."
	},
	"Rotation-x": {
		"prefix": "rotation-x",
		"body": [
			"rotation-x={0}"
		],
		"description": "Ajoute un paramètre de rotation x."
	},
	"Rotation-y": {
		"prefix": "rotation-y",
		"body": [
			"rotation-y={0}"
		],
		"description": "Ajoute un paramètre de rotation y."
	},
	"Rotation-z": {
		"prefix": "rotation-z",
		"body": [
			"rotation-z={0}"
		],
		"description": "Ajoute un paramètre de rotation z."
	},
	"Scale": {
		"prefix": "scale",
		"body": [
			"scale={[1, 1, 1]}"
		],
		"description": "Ajoute un paramètre d'échelle."
	},
	"Color": {
		"prefix": "color",
		"body": [
			"color='red'"
		],
		"description": "Ajoute un paramètre de couleur."
	},
	"Intensity": {
		"prefix": "intensity",
		"body": [
			"intensity={1.5}"
		],
		"description": "Ajoute un paramètre d'intensité."
	},
	"Doubleside": {
		"prefix": "side",
		"body": [
			"side={THREE.DoubleSide}"
		],
		"description": "Ajoute un paramètre de double face."
	},

	// Attributes snippets
	"Buffer Attribute": {
		"prefix": "bufferAttribute",
		"body": [
			"<bufferAttribute attach='attributes-position' count={verticesCount} itemSize={3} array={positions} />"],
		"description": "Ajoute un attribut tampon."
	},
	// Utils
	"Ref": {
		"prefix": "ref",
		"body": [
			"ref={}"
		],
		"description": "Ajoute un hook de référence."
	},
}
